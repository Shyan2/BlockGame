{"ast":null,"code":"import _toConsumableArray from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sc/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sc/social-network/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Identicon from \"identicon.js\";\nimport \"./App.css\";\nimport SocialNetwork from \"../abis/SocialNetwork.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, socialNetwork, postCount, i, post;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; //load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); //first is the one connected with metamask (an array)\n                //Network ID\n\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkData = SocialNetwork.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                //console.log(networkId);\n                socialNetwork = web3.eth.Contract(SocialNetwork.abi, networkData.address);\n                this.setState({\n                  socialNetwork: socialNetwork\n                }); //this.setState({ socialNetwork: socialNetwork });\n                //call only reads data (no gas), send requires gas\n\n                _context3.next = 15;\n                return socialNetwork.methods.postCount().call();\n\n              case 15:\n                postCount = _context3.sent;\n                this.setState({\n                  postCount: postCount\n                }); //console.log(postCount);\n                //Load posts\n\n                i = 1;\n\n              case 18:\n                if (!(i <= postCount)) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                _context3.next = 21;\n                return socialNetwork.methods.posts(i).call();\n\n              case 21:\n                post = _context3.sent;\n                this.setState({\n                  posts: [].concat(_toConsumableArray(this.state.posts), [post]) //adds post to the end of the posts array, new in es6 and react\n\n                });\n\n              case 23:\n                i++;\n                _context3.next = 18;\n                break;\n\n              case 26:\n                //console.log({ posts: this.state.posts });\n                this.setState({\n                  loading: false\n                });\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert(\"SocialNetwork contract not deployed to detected network.\");\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"createPost\",\n    value: function createPost(content) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.socialNetwork.methods.createPost(content).send({\n        from: this.state.account\n      }).then(\"receipt\", function (receipt) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    };\n    _this.createPost = _this.createPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        posts: this.state.posts,\n        createPost: this.createPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sc/social-network/src/components/App.js"],"names":["React","Component","Web3","Identicon","SocialNetwork","Navbar","Main","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkData","networks","socialNetwork","Contract","abi","address","methods","postCount","call","i","posts","post","state","loading","content","createPost","send","from","then","receipt","props","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Identicon from \"identicon.js\";\nimport \"./App.css\";\nimport SocialNetwork from \"../abis/SocialNetwork.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\nclass App extends Component {\n  async componentWillMount() {\n    //wait for it to happen before doing anything else\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    //load account\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({ account: accounts[0] }); //first is the one connected with metamask (an array)\n    //Network ID\n    const networkId = await web3.eth.net.getId();\n    const networkData = SocialNetwork.networks[networkId];\n    if (networkData) {\n      //console.log(networkId);\n      const socialNetwork = web3.eth.Contract(\n        SocialNetwork.abi,\n        networkData.address\n      );\n      this.setState({ socialNetwork }); //this.setState({ socialNetwork: socialNetwork });\n      //call only reads data (no gas), send requires gas\n      const postCount = await socialNetwork.methods.postCount().call();\n      this.setState({ postCount });\n      //console.log(postCount);\n      //Load posts\n      for (var i = 1; i <= postCount; i++) {\n        const post = await socialNetwork.methods.posts(i).call();\n        this.setState({\n          posts: [...this.state.posts, post], //adds post to the end of the posts array, new in es6 and react\n        });\n      }\n      //console.log({ posts: this.state.posts });\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"SocialNetwork contract not deployed to detected network.\");\n    }\n  }\n\n  createPost(content) {\n    this.setState({ loading: true });\n    this.state.socialNetwork.methods\n      .createPost(content)\n      .send({ from: this.state.account })\n      .then(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true,\n    };\n\n    this.createPost = this.createPost.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center mt-5\">\n            <p>Loading...</p>\n          </div>\n        ) : (\n          <Main posts={this.state.posts} createPost={this.createPost} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}